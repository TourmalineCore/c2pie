name: Package Publishing

on:
  release:
    types: [created]

permissions:
  contents: read
  packages: read

concurrency:
  group: publishing-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  linting-and-testing:
    name: Linting and Testing
    uses: ./.github/workflows/lint-and-test.yml

  release-build:
    name: Build and Publish Package
    if: startsWith(github.event.ref, 'refs/tags/v')
    needs: linting-and-testing

    strategy: 
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13", "3.14"]

    runs-on: ${{ matrix.os }}
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 'latest'

      - name: Build the Package        
        run: |
          poetry build

      - name: Upload dists
        uses: actions/upload-artifact@v4
        with:
          name: release-dists-${{ matrix.os }}-py${{ matrix.python-version }}
          path: dist/*

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    permissions:
      id-token: write

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v5
        with:
          path: dist/
        run: ls -R dist

      - name: Combine all distributions
        run: |
          mkdir -p final_dists
          find dist -type f -name "*.whl" -exec cp {} final_dists/ \;
          find dist -type f -name "*.tar.gz" -exec cp {} final_dists/ \;

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@3e4f5a6b7c8d9e0f1a2b3c4d5e6f7a8b9c0d1e2f
        with:
          packages-dir: final_dists