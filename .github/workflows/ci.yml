name: Lint

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

permissions:
  contents: read

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ruff:
    runs-on: [self-hosted, Linux, X64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install ruff
        run: python -m pip install ruff

      - name: Ruff version
        run: ruff --version

      - name: Check formatting
        run: ruff format --check .

      - name: Lint (GitHub Annotations)
        run: ruff check --output-format=github .

  run-unit-tests:
  name: Run unit tests using matrix
  strategy: 
    fail-fast: false
    matrix:
      os: [ubuntu-latest, macos-latest, windows-latest]
      python-version: ["3.9","3.10","3.11","3.12","pypy-3.10"]

  runs-on: ${{ matrix.os }}
  timeout-minutes: 30

  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 'latest'

    - name: Run Poetry install
      run: |
        poetry install --no-interaction --no-ansi

    - name: Ensure pytest is available
      run: |
        if ! command -v pytest >/dev/null 2>&1; then
          python -m pip install -U pip pytest
        fi

    - name: Run unit tests with coverage
      run: |
        python -m pip install -q coverage pytest
        poetry run coverage run -m pytest --ignore=test_application -m "not e2e" -q --maxfail=1
        poetry run coverage xml -o coverage-unit.xml

    - name: Upload test report (JUnit)
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: junit-${{ github.sha }}
        path: reports/junit.xml

  run-e2e-tests:
  name: Run e2e tests
  runs-on: [self-hosted, Linux, X64]
  timeout-minutes: 30

  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 'latest'

    - name: Run Poetry install
      run: |
        poetry install --no-interaction --no-ansi

    - name: Ensure pytest is available
      run: |
        if ! command -v pytest >/dev/null 2>&1; then
          python -m pip install -U pip pytest
        fi

    - name: Cache Rust and Cargo dependencies
      id: cache-rust
      uses: actions/cache@v4
      with:
        path: |
          ~/.rustup
          ~/.cargo
        key: ${{ runner.os }}-rust-
        restore-keys: |
          ${{ runner.os }}-rust-

    - name: Install Rust toolchain and c2patool
      if: steps.cache-rust.outputs.cache-hit != 'true'
      run: |
        curl -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain stable
        . "$HOME/.cargo/env"
        cargo install c2patool --locked

    - name: Add cargo to PATH
      run: echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Verify if c2patool is installed 
      run: |
        c2patool -V

    - name: Run e2e tests with coverage
      run: |
        python -m pip install -q coverage pytest
        poetry run coverage run -m pytest tests/c2pa/e2e_test.py -q
        poetry run coverage xml -o coverage-e2e.xml
